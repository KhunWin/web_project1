'use strict';

var vue = require('vue');
var config = require('./config.js');
var helpers = require('./helpers.js');

var MatchMediaMixin = vue.defineComponent({
    props: {
        /**
         * Mobile breakpoint as max-width value
         */
        mobileBreakpoint: String
    },
    data() {
        return {
            isMatchMedia: undefined
        };
    },
    methods: {
        onMatchMedia(event) {
            this.isMatchMedia = event.matches;
        }
    },
    mounted() {
        let width = this.mobileBreakpoint;
        if (!width) {
            const config$1 = config.getOptions();
            const defaultWidth = helpers.getValueByPath(config$1, `mobileBreakpoint`, '1023px');
            width = helpers.getValueByPath(config$1, `${this.$options.configField}.mobileBreakpoint`, defaultWidth);
        }
        this.$mediaRef = window.matchMedia(`(max-width: ${width})`);
        if (this.$mediaRef) {
            this.isMatchMedia = this.$mediaRef.matches;
            this.$mediaRef.addEventListener('change', this.onMatchMedia);
        }
        else {
            this.isMatchMedia = false;
        }
    },
    unmounted() {
        if (this.$mediaRef) {
            this.$mediaRef.removeEventListener('change', this.onMatchMedia);
        }
    }
});

exports.MatchMediaMixin = MatchMediaMixin;
